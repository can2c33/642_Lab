View(longModel)
t <- longModel$statistic[[1]]
df <- longModel$parameter[[1]]
r <- sqrt(t^2/(t^2+df))
round (r, 3)
anxLong <- read.delim("SpiderLong.dat", header = TRUE)
anxWide <- read.delim("SpiderWide.dat", header = TRUE)
library(ggplot2)
library(pastecs)
library(WRS)
library(car)
anxWide$dif <- anxWide$picture - anxWide$real
anxWide
stat.desc(anxWide$dif, basic = F, norm = T)
anxLong <- read.delim("SpiderLong.dat", header = TRUE)
anxWide <- read.delim("SpiderWide.dat", header = TRUE)
library(ggplot2)
library(pastecs)
library(WRS)
library(car)
anxWide$dif <- anxWide$picture - anxWide$real
anxWide
#you do not have to test for homogeneity of variance in a dependent t test
stat.desc(anxWide$dif, basic = F, norm = T)
longModeldep <- t.test(Anxiety ~ Group, data = anxLong, paired = TRUE, na.action = na.omit)
longModeldep
#
yuend(anxWide$picture, anxWide$real, tr = .2)
#
ydbt(anxWide$picture, anxWide$real, tr = .2, nboot = 2000, alpha = .05, side = TRUE)
#
bootdpci(anxWide$picture, anxWide$real, alpha = .05, nboot = 2000, est = tmean)
df <- longModeldep$parameter[[1]]
dfalt <- wideModeldep$parameter[[1]]
r <- sqrt(t^2/(t^2+df))
#
ydbt(anxWide$picture, anxWide$real, tr = .2, nboot = 2000, alpha = .05, side = TRUE)
hw2data <- read.delim("HW2.dat", header = TRUE)
library(ggplot2)
library(pastecs)
library(psych)
library(boot)
library(QuantPsyc)
library(car)
#3-10
stat.desc(hw2data[,c("Stigma", "Thoughts", "Hope", "Emotion")], basic = F, norm = T)
#15-19
simple <- lm(Stigma ~ Thoughts, data = hw2data, na.action = na.omit)
summary(simple)
#20-21
lm.beta(simple)
stat.desc(hw2data[,c("Stigma", "Thoughts")], basic = F, norm = T)
#23-27
hierarchial <- lm(Stigma ~ Thoughts + Hope + Emotion, data = hw2data, na.action = na.omit)
summary(hierarchial)
#28-29
lm.beta(hierarchial)
hw2data <- read.delim("HW2.dat", header = TRUE)
hw2data <- read.delim("HW2.dat", header = TRUE)
hw2data <- read.delim("HW2.dat", header = TRUE)
hw2data <- read.delim("HW2.dat", header = TRUE)
hw2data <- read.delim("HW2.dat", header = TRUE)
library(ggplot2)
library(pastecs)
library(psych)
library(boot)
library(QuantPsyc)
library(car)
stat.desc(hw2data[,c("Stigma, "Thoughts", "Hope", "Emotion")], basic = F, norm = T)
#15-19
simple <- lm(Stigma ~ Thoughts, data = hw2data, na.action = na.omit)
summary(simple)
#20-21
lm.beta(simple)
stat.desc(hw2data[,c("Stigma", "Thoughts")], basic = F, norm = T)
#23-27
hierarchial <- lm(Stigma ~ Thoughts + Hope + Emotion, data = hw2data, na.action = na.omit)
summary(hierarchial)
#28-29
lm.beta(hierarchial)
#3-10
stat.desc(hw2data[,c("Stigma, "Thoughts", "Hope", "Emotion")], basic = F, norm = T)
#15-19
simple <- lm(Stigma ~ Thoughts, data = hw2data, na.action = na.omit)
summary(simple)
#20-21
lm.beta(simple)
stat.desc(hw2data[,c("Stigma", "Thoughts")], basic = F, norm = T)
#23-27
hierarchial <- lm(Stigma ~ Thoughts + Hope + Emotion, data = hw2data, na.action = na.omit)
summary(hierarchial)
#28-29
lm.beta(hierarchial)
#31-34
anova(simple, hierarchial)
#35 36
rstandard(hierarchial)
hierarchial$stdresid <- rstandard(hierarchial)
hierarchial$sturesid <- rstudent(hierarchial)
hierarchial$resid <- resid(hierarchial)
hierarchial$large.resid <- hierarchial$stdresid > 2 | hierarchial$stdresid < -2
sum(hierarchial$large.resid)
#37
problems <- hierarchial[hierarchial$large.resid]
problems <- hierarchial[hierarchial$large.resid,]
problems
write.table(problems, "HW2.dat", sep = "\t", row.names = TRUE)
#37 - 41
hierarchial$cooks <- cooks.distance(hierarchial)
hierarchial$leverage <- hatvalues(hierarchial)
hierarchial$dffit <- dffits(hierarchial)
hierarchial$dfbeta <- dfbeta(hierarchial)
problems <- hierarchial[hierarchial$large.resid,c("cooks", "leverage", "dffit", "dfbeta")] #updates your special cases dataframe
46
problems
#40
ncvTest(hierarchial)
#41 - 42
hpredict <- hierarchial[,c("Stigma", "Thoughts", "Hope", "Emotion")]
cor(hpredict, use = "pairwise.complete.obs", method = "pearson")
#43
vif(hierarchial)
1/vif(hierarchial)
external <- hierarchial[,c("adverts","airplay","attract","resid")]
cor(external, use = "pairwise.complete.obs", method = "pearson")
#45 -
durbinWatsonTest(hierarchial)
dwt(hierarchial)
rstandard(hierarchial)
hierarchial$stdresid <- rstandard(hierarchial)
hierarchial$sturesid <- rstudent(hierarchial)
hierarchial$resid <- resid(hierarchial)
hierarchial$large.resid <- hierarchial$stdresid > 2 | hierarchial$stdresid < -2
sum(hierarchial$large.resid)
#3-10
stat.desc(hw2data[,c("Stigma, "Thoughts", "Hope", "Emotion")], basic = F, norm = T)
#15-19
simple <- lm(Stigma ~ Thoughts, data = hw2data, na.action = na.omit)
summary(simple)
#20-21
lm.beta(simple)
stat.desc(hw2data[,c("Stigma", "Thoughts")], basic = F, norm = T)
#23-27
hierarchial <- lm(Stigma ~ Thoughts + Hope + Emotion, data = hw2data, na.action = na.omit)
summary(hierarchial)
#28-29
lm.beta(hierarchial)
#31-34
anova(simple, hierarchial)
#35 36
rstandard(hierarchial)
hierarchial$stdresid <- rstandard(hierarchial)
hierarchial$sturesid <- rstudent(hierarchial)
hierarchial$resid <- resid(hierarchial)
hierarchial$large.resid <- hierarchial$stdresid > 2 | hierarchial$stdresid < -2
sum(hierarchial$large.resid)
#37
problems <- hierarchial[hierarchial$large.resid]
problems <- hierarchial[hierarchial$large.resid,]
problems
write.table(problems, "HW2.dat", sep = "\t", row.names = TRUE)
#37 - 41
hierarchial$cooks <- cooks.distance(hierarchial)
hierarchial$leverage <- hatvalues(hierarchial)
hierarchial$dffit <- dffits(hierarchial)
hierarchial$dfbeta <- dfbeta(hierarchial)
problems <- hierarchial[hierarchial$large.resid,c("cooks", "leverage", "dffit", "dfbeta")] #updates your special cases dataframe
46
problems
#40
ncvTest(hierarchial)
#41 - 42
hpredict <- hierarchial[,c("Stigma", "Thoughts", "Hope", "Emotion")]
cor(hpredict, use = "pairwise.complete.obs", method = "pearson")
#43
vif(hierarchial)
1/vif(hierarchial)
external <- hierarchial[,c("adverts","airplay","attract","resid")]
cor(external, use = "pairwise.complete.obs", method = "pearson")
#45 -
durbinWatsonTest(hierarchial)
dwt(hierarchial)
#3-10
stat.desc(hw2data[,c("Stigma, "Thoughts", "Hope", "Emotion")], basic = F, norm = T)
#15-19
simple <- lm(Stigma ~ Thoughts, data = hw2data, na.action = na.omit)
summary(simple)
#20-21
lm.beta(simple)
stat.desc(hw2data[,c("Stigma", "Thoughts")], basic = F, norm = T)
#23-27
hierarchial <- lm(Stigma ~ Thoughts + Hope + Emotion, data = hw2data, na.action = na.omit)
summary(hierarchial)
#28-29
lm.beta(hierarchial)
#31-34
anova(simple, hierarchial)
#35 36
rstandard(hierarchial)
hierarchial$stdresid <- rstandard(hierarchial)
hierarchial$sturesid <- rstudent(hierarchial)
hierarchial$resid <- resid(hierarchial)
hierarchial$large.resid <- hierarchial$stdresid > 2 | hierarchial$stdresid < -2
sum(hierarchial$large.resid)
#37
problems <- hierarchial[hierarchial$large.resid]
problems <- hierarchial[hierarchial$large.resid,]
problems
write.table(problems, "HW2.dat", sep = "\t", row.names = TRUE)
#37 - 41
hierarchial$cooks <- cooks.distance(hierarchial)
hierarchial$leverage <- hatvalues(hierarchial)
hierarchial$dffit <- dffits(hierarchial)
hierarchial$dfbeta <- dfbeta(hierarchial)
problems <- hierarchial[hierarchial$large.resid,c("cooks", "leverage", "dffit", "dfbeta")] #updates your special cases dataframe
46
problems
#40
ncvTest(hierarchial)
#41 - 42
hpredict <- hierarchial[,c("Stigma", "Thoughts", "Hope", "Emotion")]
cor(hpredict, use = "pairwise.complete.obs", method = "pearson")
#43
vif(hierarchial)
1/vif(hierarchial)
external <- hierarchial[,c("adverts","airplay","attract","resid")]
cor(external, use = "pairwise.complete.obs", method = "pearson")
#45 -
durbinWatsonTest(hierarchial)
dwt(hierarchial)
#3-10
stat.desc(hw2data[,c("Stigma, "Thoughts", "Hope", "Emotion")], basic = F, norm = T)
#15-19
simple <- lm(Stigma ~ Thoughts, data = hw2data, na.action = na.omit)
summary(simple)
#20-21
lm.beta(simple)
stat.desc(hw2data[,c("Stigma", "Thoughts")], basic = F, norm = T)
#23-27
hierarchial <- lm(Stigma ~ Thoughts + Hope + Emotion, data = hw2data, na.action = na.omit)
summary(hierarchial)
#28-29
lm.beta(hierarchial)
#31-34
anova(simple, hierarchial)
#35 36
rstandard(hierarchial)
hierarchial$stdresid <- rstandard(hierarchial)
hierarchial$sturesid <- rstudent(hierarchial)
hierarchial$resid <- resid(hierarchial)
hierarchial$large.resid <- hierarchial$stdresid > 2 | hierarchial$stdresid < -2
sum(hierarchial$large.resid)
#37
problems <- hierarchial[hierarchial$large.resid]
problems <- hierarchial[hierarchial$large.resid,]
problems
write.table(problems, "HW2.dat", sep = "\t", row.names = TRUE)
#37 - 41
hierarchial$cooks <- cooks.distance(hierarchial)
hierarchial$leverage <- hatvalues(hierarchial)
hierarchial$dffit <- dffits(hierarchial)
hierarchial$dfbeta <- dfbeta(hierarchial)
problems <- hierarchial[hierarchial$large.resid,c("cooks", "leverage", "dffit", "dfbeta")] #updates your special cases dataframe
46
problems
#40
ncvTest(hierarchial)
#41 - 42
hpredict <- hierarchial[,c("Stigma", "Thoughts", "Hope", "Emotion")]
cor(hpredict, use = "pairwise.complete.obs", method = "pearson")
#43
vif(hierarchial)
1/vif(hierarchial)
external <- hierarchial[,c("adverts","airplay","attract","resid")]
cor(external, use = "pairwise.complete.obs", method = "pearson")
#45 -
durbinWatsonTest(hierarchial)
dwt(hierarchial)
#3-10
stat.desc(hw2data[,c("Stigma, "Thoughts", "Hope", "Emotion")], basic = F, norm = T)
#15-19
simple <- lm(Stigma ~ Thoughts, data = hw2data, na.action = na.omit)
summary(simple)
#20-21
lm.beta(simple)
stat.desc(hw2data[,c("Stigma", "Thoughts")], basic = F, norm = T)
#23-27
hierarchial <- lm(Stigma ~ Thoughts + Hope + Emotion, data = hw2data, na.action = na.omit)
summary(hierarchial)
#28-29
lm.beta(hierarchial)
#31-34
anova(simple, hierarchial)
#35 36
rstandard(hierarchial)
hierarchial$stdresid <- rstandard(hierarchial)
hierarchial$sturesid <- rstudent(hierarchial)
hierarchial$resid <- resid(hierarchial)
hierarchial$large.resid <- hierarchial$stdresid > 2 | hierarchial$stdresid < -2
sum(hierarchial$large.resid)
#37
problems <- hierarchial[hierarchial$large.resid,]
problems <- hierarchial[hierarchial$large.resid,]
problems
write.table(problems, "HW2.dat", sep = "\t", row.names = TRUE)
#37 - 41
hierarchial$cooks <- cooks.distance(hierarchial)
hierarchial$leverage <- hatvalues(hierarchial)
hierarchial$dffit <- dffits(hierarchial)
hierarchial$dfbeta <- dfbeta(hierarchial)
problems <- hierarchial[hierarchial$large.resid,c("cooks", "leverage", "dffit", "dfbeta")] #updates your special cases dataframe
46
problems
#40
ncvTest(hierarchial)
#41 - 42
hpredict <- hierarchial[,c("Stigma", "Thoughts", "Hope", "Emotion")]
cor(hpredict, use = "pairwise.complete.obs", method = "pearson")
#43
vif(hierarchial)
1/vif(hierarchial)
external <- hierarchial[,c("adverts","airplay","attract","resid")]
cor(external, use = "pairwise.complete.obs", method = "pearson")
#45 -
durbinWatsonTest(hierarchial)
dwt(hierarchial)
hw2data <- read.delim("HW2.dat", header = TRUE)
hw2data <- read.delim("HW2.dat", header = TRUE)
hw2data <- read.delim("HW2.dat", header = TRUE)
library(ggplot2)
library(pastecs)
library(psych)
library(boot)
library(QuantPsyc)
library(car)
View(hw2data)
View(hw2data)
#3-10
stat.desc(hw2data[,c("Stigma, "Thoughts", "Hope", "Emotion")], basic = F, norm = T)
#15-19
simple <- lm(Stigma ~ Thoughts, data = hw2data, na.action = na.omit)
summary(simple)
#20-21
lm.beta(simple)
stat.desc(hw2data[,c("Stigma", "Thoughts")], basic = F, norm = T)
#23-27
hierarchial <- lm(Stigma ~ Thoughts + Hope + Emotion, data = hw2data, na.action = na.omit)
summary(hierarchial)
#28-29
lm.beta(hierarchial)
#31-34
anova(simple, hierarchial)
#35 36
rstandard(hierarchial)
hierarchial$stdresid <- rstandard(hierarchial)
hierarchial$sturesid <- rstudent(hierarchial)
hierarchial$resid <- resid(hierarchial)
hierarchial$large.resid <- hierarchial$stdresid > 2 | hierarchial$stdresid < -2
sum(hierarchial$large.resid)
#37
problems <- hierarchial[hierarchial$large.resid,]
problems <- hierarchial[hierarchial$large.resid,]
problems
write.table(problems, "HW2.dat", sep = "\t", row.names = TRUE)
#37 - 41
hierarchial$cooks <- cooks.distance(hierarchial)
hierarchial$leverage <- hatvalues(hierarchial)
hierarchial$dffit <- dffits(hierarchial)
hierarchial$dfbeta <- dfbeta(hierarchial)
problems <- hierarchial[hierarchial$large.resid,c("cooks", "leverage", "dffit", "dfbeta")] #updates your special cases dataframe
46
problems
#40
ncvTest(hierarchial)
#41 - 42
hpredict <- hierarchial[,c("Stigma", "Thoughts", "Hope", "Emotion")]
cor(hpredict, use = "pairwise.complete.obs", method = "pearson")
#43
vif(hierarchial)
1/vif(hierarchial)
external <- hierarchial[,c("adverts","airplay","attract","resid")]
cor(external, use = "pairwise.complete.obs", method = "pearson")
#45 -
durbinWatsonTest(hierarchial)
dwt(hierarchial)
hw2data <- read.delim("HW2.dat", header = TRUE)
library(ggplot2)
library(pastecs)
library(psych)
library(boot)
library(QuantPsyc)
library(car)
#3-10
stat.desc(hw2data[,c("Stigma, "Thoughts", "Hope", "Emotion")], basic = F, norm = T)
#15-19
simple <- lm(Stigma ~ Thoughts, data = hw2data, na.action = na.omit)
summary(simple)
#20-21
lm.beta(simple)
stat.desc(hw2data[,c("Stigma", "Thoughts")], basic = F, norm = T)
#23-27
hierarchial <- lm(Stigma ~ Thoughts + Hope + Emotion, data = hw2data, na.action = na.omit)
summary(hierarchial)
#28-29
lm.beta(hierarchial)
#31-34
anova(simple, hierarchial)
#35 36
rstandard(hierarchial)
hierarchial$stdresid <- rstandard(hierarchial)
hierarchial$sturesid <- rstudent(hierarchial)
hierarchial$resid <- resid(hierarchial)
hierarchial$large.resid <- hierarchial$stdresid > 2 | hierarchial$stdresid < -2
sum(hierarchial$large.resid)
#37
problems <- hierarchial[hierarchial$large.resid,]
problems <- hierarchial[hierarchial$large.resid,]
problems
write.table(problems, "HW2.dat", sep = "\t", row.names = TRUE)
#37 - 41
hierarchial$cooks <- cooks.distance(hierarchial)
hierarchial$leverage <- hatvalues(hierarchial)
hierarchial$dffit <- dffits(hierarchial)
hierarchial$dfbeta <- dfbeta(hierarchial)
problems <- hierarchial[hierarchial$large.resid,c("cooks", "leverage", "dffit", "dfbeta")] #updates your special cases dataframe
46
problems
#40
ncvTest(hierarchial)
#41 - 42
hpredict <- hierarchial[,c("Stigma", "Thoughts", "Hope", "Emotion")]
cor(hpredict, use = "pairwise.complete.obs", method = "pearson")
#43
vif(hierarchial)
1/vif(hierarchial)
external <- hierarchial[,c("adverts","airplay","attract","resid")]
cor(external, use = "pairwise.complete.obs", method = "pearson")
#45 -
durbinWatsonTest(hierarchial)
dwt(hierarchial)
hw2data <- read.delim("HW2.dat", header = TRUE)
library(ggplot2)
library(pastecs)
library(psych)
library(boot)
library(QuantPsyc)
library(car)
#4-10
stat.desc(hw2data[,c("Stigma", "Thoughts", "Hope", "Emotion")], basic = F, norm = T)
#15-19
model1 <- lm(Stigma ~ Thoughts, data = hw2data, na.action = na.omit)
summary(model1)
#20-21
lm.beta(model1)
#22
stat.desc(hw2data[,c("Stigma", "Thoughts")], basic = F, norm = T) #to find SD of Stigmafor 22
#23-27
model2dat <- read.delim("HW2.dat", header = TRUE)
model2 <- lm(Stigma ~ Thoughts + Hope + Emotion, data = hw2data, na.action = na.omit)
summary(model2)
#28-30
lm.beta(model2)
hw2data <- read.delim("HW2.dat", header = TRUE)
library(ggplot2)
library(pastecs)
library(psych)
library(boot)
library(QuantPsyc)
library(car)
#4-10
stat.desc(hw2data[,c("Stigma", "Thoughts", "Hope", "Emotion")], basic = F, norm = T)
#15-19
model1 <- lm(Stigma ~ Thoughts, data = hw2data, na.action = na.omit)
summary(model1)
#20-21
lm.beta(model1)
#22
stat.desc(hw2data[,c("Stigma", "Thoughts")], basic = F, norm = T) #to find SD of Stigmafor 22
#23-27
model2dat <- read.delim("HW2.dat", header = TRUE)
model2 <- lm(Stigma ~ Thoughts + Hope + Emotion, data = hw2data, na.action = na.omit)
summary(model2)
#28-30
lm.beta(model2)
#32-34
anova(model1, model2)
#35-36
rstandard(model2)
model2dat$stdresid <- rstandard(model2)
model2dat$large.resid <- model2dat$stdresid > 2 | model2dat$stdresid < -2
sum(model2dat$large.resid)
#37
problems <- model2dat[model2dat$large.resid,]
problems
model2dat$cooks <- cooks.distance(model2)
model2dat$leverage <- hatvalues(model2)
model2dat$dffit <- dffits(model2)
model2dat$dfbeta <- dfbeta(model2)
problems <- model2dat[model2dat$large.resid,c("cooks", "leverage", "dffit", "dfbeta")]
problems
#40-41
ncvTest(model2)
#42
modelpredict <- model2dat[,c("Thoughts","Hope","Emotion")]
cor(modelpredict, use = "pairwise.complete.obs", method = "pearson")
#43-44
vif(model2)
#45-47
durbinWatsonTest(model2)
#48
boot.ci(boot.out = boot_r, type = "bca", index = 1)
txLong <- read.delim("HW3tx.dat", header = TRUE)
