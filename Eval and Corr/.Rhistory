hist.day1 = ggplot(fdata, aes(day1)) +
geom_histogram(aes(y = ..density..)), color = "black", fill = "white"
+ labs(x = "Hygiene score on day 1", y = "Density")
hist.day1 = ggplot(fdata, aes(day1)) +
geom_histogram(aes(y = ..density..), color = "black", fill = "white" + labs(x = "Hygiene score on day 1", y = "Density"))
hist.day1 = ggplot(fdata, aes(day1)) +
geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "Hygiene score on day 1", y = "Density")
hist.day1 = ggplot(fdata, aes(day1)) +
geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "Hygiene score on day 1", y = "Density")
hist.day1 = ggplot(fdata, aes(day1)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "Hygiene score on day 1", y = "Density")
hist.day1 = ggplot(fdata, aes(day1)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "Hygiene score on day 1", y = "Density")
hist.day1
hist.day1 + stat_function(fun = dnorm, args = list(mean(fdata$day1, na.rm = TRUE), sd = sd(fdata$day1, na.rm = TRUE)), Colour = "black", size = 1)
qqplot.day1 = qplot(sample = fdata$day1, stat= "qq")
qqplot.day1
library(ggplot2) #this activates ggplot and the following activates the rest of the packages
library(car)
library(pastecs)
library(psych)
library(carData)
hist.day3 = ggplot(fdata, aes(day3)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "Hygiene score on day 3", y = "Density")
hist.day3
hist.day3 + stat_function(fun = dnorm, args = list(mean(fdata$day3, na.rm = TRUE), sd = sd(fdata$day3, na.rm = TRUE)), Colour = "black", size = 1)
qqplot.day3 = qplot(sample = fdata$day3, stat= "qq") #what this function does is compare your data to
qqplot.day3
qqplot <- ggplot(fdata, aes(sample(day1)) + stat_qq(na.rm = TRUE)
qqplot <- ggplot(fdata, aes(sample(day1)) + stat_qq(na.rm = TRUE))
qqplot
qqplot <- ggplot(fdata, aes(sample(day3)) + stat_qq(na.rm = TRUE))
qqplot <- ggplot(fdata, aes(sample(day3)) + stat_qq(na.rm = TRUE))
qqplot <- ggplot(fdata, aes(sample(day1)) + stat_qq(na.rm = TRUE))
qqplot <- ggplot(fData, aes(sample = day3)) + stat_qq(na.rm = TRUE)
qqplot <- ggplot(fData, aes(sample = day1)) + stat_qq(na.rm = TRUE)
library(ggplot2) #this activates ggplot and the following activates the rest of the packages
qqplot <- ggplot(fdata, aes(sample = day1)) + stat_qq(na.rm = TRUE)
qqplot
qqplot <- ggplot(fdata, aes(sample = day3)) + stat_qq(na.rm = TRUE)
qqplot
decribe(fdata$day1)
library(psych)
decribe(fdata$day1)
describe(fdata$day1)
stat.desc(fdata$day1, basic = FALSE, norm = TRUE)
describe(cbind(fdata$day1, fdata$day2, fdata$day3))
stat.desc(cbind(fdata$day1, fdata$day2, fdata$day3), basic = FALSE, norm = TRUE)
library(readxl)
RExam <- read_excel("~/Tech/Class Folders/Adv. Exp 642/Data/RExam.xlsx")
View(RExam)
eData$uni <- factor(eData$uni, levels = c(0:1), labels = c("Duncetown University", "Sussex University"))
eData = RExam
eData$uni <- factor(eData$uni, levels = c(0:1), labels = c("Duncetown University", "Sussex University"))
eData <- RExam
eData$uni <- factor(eData$uni, levels = c(0:1), labels = c("Duncetown University", "Sussex University"))
eData = RExam
eData <- RExam
eData <- factor(eData$uni, levels = c(0:1), labels = c("Duncetown University", "Sussex University"))
hist.computer = ggplot(eData, aes(computer)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "computer", y = "Density")
hist.computer = ggplot(eData, aes(computer)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "computer", y = "Density")
eData
fData = read.delim("Festival.dat", header = TRUE)
eData <- factor(eData$uni, levels = c(0:1), labels = c("Duncetown University", "Sussex University"))
eData = read.delim("EData,dat", header = TRUE)
eData = read.delim("RExam,dat", header = TRUE)
eData = read.delim("RExam.dat", header = TRUE)
eData <- factor(eData$uni, levels = c(0:1), labels = c("Duncetown University", "Sussex University"))
hist.computer = ggplot(eData, aes(computer)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "computer", y = "Density")
library(ggplot2) #this activates ggplot and the following activates the rest of the packages
hist.computer = ggplot(eData, aes(computer)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "computer", y = "Density")
eData
eData
hist.computer = ggplot(eData, aes(computer)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "computer", y = "Density")
dunceData <- subset(eData, eData$uni=="Duncetown University")
library(ggplot2) #this activates ggplot and the following activates the rest of the packages
library(car)
library(pastecs)
library(psych)
library(carData)
eData <- factor(eData$uni, levels = c(0:1), labels = c("Duncetown University", "Sussex University"))
hist.computer = ggplot(eData, aes(computer)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "computer", y = "Density")
eData <- factor(eData$uni, levels = c(0:1), labels = c("Duncetown University", "Sussex University"))
eData = read.delim("RExam.dat", header = TRUE)
eData
eData <- factor(eData$uni, levels = c(0:1), labels = c("Duncetown University", "Sussex University"))
hist.computer = ggplot(eData, aes(computer)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "computer", y = "Density")
eData = read.delim("RExam.dat", header = TRUE)
eData
eData <- factor(eData$uni, levels = c(0:1), labels = c("Duncetown University", "Sussex University"))
eData
hist.computer = ggplot(eData, aes(computer)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "computer", y = "Density")
hist.lectures = ggplot(eData, aes(lectures)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "lectures", y = "Density")
library(ggplot2) #this activates ggplot and the following activates the rest of the packages
library(car)
library(pastecs)
library(psych)
library(carData)
eData = read.delim("RExam.dat", header = TRUE)
eData <- factor(eData$uni, levels = c(0:1), labels = c("Duncetown University", "Sussex University"))
eData
hist.computer = ggplot(eData, aes(computer)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "computer", y = "Density")
eData <- as.data.frame(eData)
hist.computer = ggplot(eData, aes(computer)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "computer", y = "Density")
hist.lectures = ggplot(eData, aes(lectures)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "lectures", y = "Density")
hist.numeracy = ggplot(eData, aes(numeracy)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "numeracy", y = "Density")
hist.computer
print <- hist.computer
eData = read.delim("RExam.dat", header = TRUE)
eData <- factor(eData$uni, levels = c(0:1), labels = c("Duncetown University", "Sussex University"))
eData
hist.computer = ggplot(eData, aes(computer)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "computer", y = "Density")
eData <- frame(eData$uni, levels = c(0:1), labels = c("Duncetown University", "Sussex University"))
eData <- as.data.frame(eData)
hist.computer = ggplot(eData, aes(computer)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "computer", y = "Density")
hist.computer
library(ggplot2) #this activates ggplot and the following activates the rest of the packages
library(car)
library(pastecs)
library(psych)
library(carData)
eData = read.delim("RExam.dat", header = TRUE)
eData$uni <- factor(eData$uni, levels = c(0:1), labels = c("Duncetown
University", "Sussex University"))
hist.exam <- ggplot(eData, aes(exam)) + geom_histogram(aes(y =
..density..), color = "black", fill = "white") + labs(x = "Exam
Score", y = "Density")
hist.exam
eData$uni <- factor(eData$uni, levels = c(0:1), labels = c("Duncetown
University", "Sussex University"))
hist.computer <- ggplot(eData, aes(computer)) + geom_histogram(aes(y =
..density..), color = "black", fill = "white") + labs(x = "Computer
Literacy", y = "Density")
hist.computer
hist.lectures <- ggplot(eData, aes(lectures)) + geom_histogram(aes(y =
..density..), color = "black", fill = "white") + labs(x = "Percent
Attendance", y = "Density")
hist.lectures
hist.numeracy <- ggplot(eData, aes(numeracy)) + geom_histogram(aes(y =
..density..), color = "black", fill = "white") + labs(x = "Numeracy",
y = "Density")
hist.numeracy
hist.exam + stat_function(fun = dnorm, args = list(mean =
mean(eData$exam, na.rm = TRUE), sd = sd(eData$exam, na.rm = TRUE)),
color = "black", size = 1)
hist.computer + stat_function(fun = dnorm, args = list(mean =
mean(eData$computer, na.rm = TRUE), sd = sd(eData$computer, na.rm =
TRUE)), color = "black", size = 1)
hist.lectures + stat_function(fun = dnorm, args = list(mean =
mean(eData$lectures, na.rm = TRUE), sd = sd(eData$lectures, na.rm =
TRUE)), color = "black", size = 1)
hist.numeracy + stat_function(fun = dnorm, args = list(mean =
mean(eData$numeracy, na.rm = TRUE), sd = sd(eData$numeracy, na.rm =
TRUE)), color = "black", size = 1)
dunceData <- subset(eData, eData$uni=="Duncetown University")
sussexData <- subset(eData, eData$uni=="Sussex University")
hist.exam.dunce <- ggplot(dunceData, aes(exam)) + geom_histogram(aes(y
= ..density..), fill = "white", color = "black") + labs(x = "Exam
Score", y = "Density") + stat_function(fun = dnorm, args = list(mean =
mean(dunceData$exam, na.rm = TRUE), sd = sd(dunceData$exam, na.rm =                                                                                                               TRUE)), color = "black", size = 1)
hist.exam.dunce
hist.exam.sussex <- ggplot(sussexData, aes(exam)) +
geom_histogram(aes(y = ..density..), fill = "white", color = "black")
+ labs(x = "Exam Score", y = "Density") + stat_function(fun = dnorm,
args = list(mean = mean(sussexData$exam, na.rm = TRUE), sd =
sd(sussexData$exam, na.rm = TRUE)), color = "black", size = 1)
hist.exam.sussex
eData = read.delim("RExam.dat", header = TRUE)
eData$uni <- factor(eData$uni, levels = c(0:1), labels = c("Duncetown
University", "Sussex University"))
hist.exam <- ggplot(eData, aes(exam)) + geom_histogram(aes(y =
..density..), color = "black", fill = "white") + labs(x = "Exam
Score", y = "Density")
hist.exam
hist.computer <- ggplot(eData, aes(computer)) + geom_histogram(aes(y =
..density..), color = "black", fill = "white") + labs(x = "Computer
Literacy", y = "Density")
hist.computer
hist.lectures <- ggplot(eData, aes(lectures)) + geom_histogram(aes(y =
..density..), color = "black", fill = "white") + labs(x = "Percent
Attendance", y = "Density")
hist.lectures
hist.numeracy <- ggplot(eData, aes(numeracy)) + geom_histogram(aes(y =
..density..), color = "black", fill = "white") + labs(x = "Numeracy",
y = "Density")
hist.numeracy
describe(cbind(eData$exam, eData$computer, eData$lectures, eData$numeracy)) #use when you need to know the number of cases in
stat.desc(cbind(eData$day1, eData$exam, eData$lectures, eData$numeracy), basic = FALSE, norm = TRUE) #use when you need to know the
hist.exam + stat_function(fun = dnorm, args = list(mean =
mean(eData$exam, na.rm = TRUE), sd = sd(eData$exam, na.rm = TRUE)),
color = "black", size = 1)
hist.computer + stat_function(fun = dnorm, args = list(mean =
mean(eData$computer, na.rm = TRUE), sd = sd(eData$computer, na.rm =
TRUE)), color = "black", size = 1)
hist.lectures + stat_function(fun = dnorm, args = list(mean =
mean(eData$lectures, na.rm = TRUE), sd = sd(eData$lectures, na.rm =
TRUE)), color = "black", size = 1)
hist.numeracy + stat_function(fun = dnorm, args = list(mean =
mean(eData$numeracy, na.rm = TRUE), sd = sd(eData$numeracy, na.rm =
TRUE)), color = "black", size = 1)
dunceData <- subset(eData, eData$uni=="Duncetown University")
sussexData <- subset(eData, eData$uni=="Sussex University")
hist.exam.dunce <- ggplot(dunceData, aes(exam)) + geom_histogram(aes(y
= ..density..), fill = "white", color = "black") + labs(x = "Exam
Score", y = "Density") + stat_function(fun = dnorm, args = list(mean =
mean(dunceData$exam, na.rm = TRUE), sd = sd(dunceData$exam, na.rm =                                                                                                               TRUE)), color = "black", size = 1)
hist.exam.dunce
hist.exam.dunce <- ggplot(dunceData, aes(exam)) + geom_histogram(aes(y
= ..density..), fill = "white", color = "black") + labs(x = "Exam
Score", y = "Density") + stat_function(fun = dnorm, args = list(mean =
mean(dunceData$exam, na.rm = TRUE), sd = sd(dunceData$exam, na.rm =
hist.exam.dunce
hist.exam.sussex <- ggplot(sussexData, aes(exam)) +
geom_histogram(aes(y = ..density..), fill = "white", color = "black")
+ labs(x = "Exam Score", y = "Density") + stat_function(fun = dnorm,
args = list(mean = mean(sussexData$exam, na.rm = TRUE), sd =
sd(sussexData$exam, na.rm = TRUE)), color = "black", size = 1)
hist.exam.dunce <- ggplot(dunceData, aes(exam)) + geom_histogram(aes(y = ..density..), fill = "white", color = "black") + labs(x = "Exam
Score", y = "Density") + stat_function(fun = dnorm, args = list(mean =
mean(dunceData$exam, na.rm = TRUE), sd = sd(dunceData$exam, na.rm =
hist.exam.dunce
hist.exam.dunce <- ggplot(dunceData, aes(exam)) + geom_histogram(aes(y = ..density..), fill = "white", color = "black") + labs(x = "ExamScore", y = "Density") + stat_function(fun = dnorm, args = list(mean =
mean(dunceData$exam, na.rm = TRUE), sd = sd(dunceData$exam, na.rm = TRUE)), color = "black", size = 1)
dunceData <- subset(eData, eData$uni=="Duncetown University")
sussexData <- subset(eData, eData$uni=="Sussex University")
eData$uni <- factor(eData$uni, levels = c(0:1), labels = c("Duncetown
University", "Sussex University"))
dunceData <- subset(eData, eData$uni=="Duncetown University")
by(eData$exam, eData$uni, stat.desc, basic = FALSE, norm = TRUE)
eData$uni <- factor(eData$uni, levels = c(0:1), labels = c("Duncetown University", "Sussex University"))
eData
eData = read.delim("RExam.dat", header = TRUE)
eData$uni <- factor(eData$uni, levels = c(0:1), labels = c("Duncetown University", "Sussex University"))
eData$uni <- factor(eData$uni, levels = c(0:1), labels = c("Duncetown University", "Sussex University"))
eData
hist.exam <- ggplot(eData, aes(exam)) + geom_histogram(aes(y =
..density..), color = "black", fill = "white") + labs(x = "Exam
Score", y = "Density")
hist.exam
hist.computer <- ggplot(eData, aes(computer)) + geom_histogram(aes(y =
..density..), color = "black", fill = "white") + labs(x = "Computer
Literacy", y = "Density")
hist.computer
hist.lectures <- ggplot(eData, aes(lectures)) + geom_histogram(aes(y =
..density..), color = "black", fill = "white") + labs(x = "Percent
Attendance", y = "Density")
hist.lectures
hist.numeracy <- ggplot(eData, aes(numeracy)) + geom_histogram(aes(y =
..density..), color = "black", fill = "white") + labs(x = "Numeracy",
y = "Density")
hist.numeracy
describe(cbind(eData$exam, eData$computer, eData$lectures, eData$numeracy)) #use when you need to know the number of cases in
#each variable #use if you are factor analyzing a scale
stat.desc(cbind(eData$day1, eData$exam, eData$lectures, eData$numeracy), basic = FALSE, norm = TRUE) #use when you need to know the
#significance of the skew or kurtosis
hist.exam + stat_function(fun = dnorm, args = list(mean =
mean(eData$exam, na.rm = TRUE), sd = sd(eData$exam, na.rm = TRUE)),
color = "black", size = 1)
hist.computer + stat_function(fun = dnorm, args = list(mean =
mean(eData$computer, na.rm = TRUE), sd = sd(eData$computer, na.rm =
TRUE)), color = "black", size = 1)
hist.lectures + stat_function(fun = dnorm, args = list(mean =
mean(eData$lectures, na.rm = TRUE), sd = sd(eData$lectures, na.rm =
TRUE)), color = "black", size = 1)
hist.numeracy + stat_function(fun = dnorm, args = list(mean =
mean(eData$numeracy, na.rm = TRUE), sd = sd(eData$numeracy, na.rm =
TRUE)), color = "black", size = 1)
dunceData <- subset(eData, eData$uni=="Duncetown University")
sussexData <- subset(eData, eData$uni=="Sussex University")
by(eData$exam, eData$uni, stat.desc, basic = FALSE, norm = TRUE)
dunceData <- subset(eData, eData$uni=="Duncetown University")
dunceData
sussexData
View(eData)
eData = read.delim("RExam.dat", header = TRUE)
View(eData)
eData$uni <- factor(eData$uni, levels = c(0:1), labels = c("Duncetown University", "Sussex University"))
View(eData)
View(eData)
by(eData$exam, eData$uni, stat.desc, basic = FALSE, norm = TRUE)
dunceData <- subset(eData, eData$uni=="Duncetown University")
dunceData
sussexData <- subset(eData, eData$uni=="Sussex University")
sussexData
describe(cbind(eData$exam, eData$computer, eData$lectures, eData$numeracy)) #use when you need to know the number of cases in
#each variable #use if you are factor analyzing a scale
stat.desc(cbind(eData$day1, eData$exam, eData$lectures, eData$numeracy), basic = FALSE, norm = TRUE) #use when you need to know the
#significance of the skew or kurtosis
describe(eData[,c("exam","computer","lectures", "numeracy")])
stat.desc(eData[,c("exam","computer","lectures", "numeracy")], basic = FALSE, norm = TRUE)
round(describe(eData[,c("exam","computer","lectures", "numeracy")]), digits = 2)
round(stat.desc(eData[,c("exam", "computer", "lectures", "numeracy")], basic = FALSE, norm = TRUE), digits = 2)
by(eData$exam, eData$uni, describe)
by(eData$exam, eData$uni, stat.desc, basic = FALSE, norm = TRUE)
by(eData[,c("exam", "numeracy")], eData$uni, stat.desc, basic = FALSE, norm = TRUE)
by(eData$exam, eData$uni, stat.desc, basic = FALSE, norm = TRUE)
shapiro.test(eData$exam)
by(eData$exam, eData$uni, shapiro.test)
leveneTest(eData$exam, eData$uni, center = mean)
## Warning in leveneTest.default(eData$exam, eData$uni, center = mean): eData$uni
## coerced to factor. If you want it to center around the median, you have to tell it.
## Levene's Test for Homogeneity of Variance (center = mean)
##       Df F value Pr(>F)
## group  1  2.5841 0.1112
##       98
leveneTest(eData$exam, eData$uni, center = median)
HW1data <- read.delim("HW1.dat", header = TRUE)
library(ggm)
library(ggplot2)
library(polycor)
library(Hmisc)
library(psych)
library(boot)
library(pastecs)
library(car)
HW1data$Gender <- factor(HW1data$Gender, levels = c(1:2), labels = c("Female","Male"))
HW1data$PastTX <- factor(HW1data$PastTX, levels = c(1:2), labels = c("No Tx", "Tx"))
maleData <- subset(HW1data, HW1data == "Male")
femaleData <- subset(HW1data, HW1data$Gender == "Female")
txData <- subset(HW1data, HW1data$PastTX == "Tx")
notxData <- subset(HW1data, HW1data$PastTX == "No Tx")
HW1edit <- HW1data[,c("Stigma","Emotion","Thoughts","Hope")]
View(eData)
View(HW1data)
hist.emotion = ggplot(HW1data, aes(emotion)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "Emotion", y = "Density")
hist.emotion
hist.emotion = ggplot(HW1data, aes(emotion)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "Emotion", y = "Density")
hist.emotion
HW1data <- read.delim("HW1.dat", header = TRUE)
hist.emotion = ggplot(HW1data, aes(emotion)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "Emotion", y = "Density")
hist.emotion
hist.emotion = ggplot(HW1data, aes(Emotion)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "Emotion", y = "Density")
hist.emotion
HW1data$Gender <- factor(HW1data$Gender, levels = c(1:2), labels = c("Female","Male"))
HW1data$PastTX <- factor(HW1data$PastTX, levels = c(1:2), labels = c("No Tx", "Tx"))
maleData <- subset(HW1data, HW1data == "Male")
femaleData <- subset(HW1data, HW1data$Gender == "Female")
txData <- subset(HW1data, HW1data$PastTX == "Tx")
notxData <- subset(HW1data, HW1data$PastTX == "No Tx")
HW1edit <- HW1data[,c("Stigma","Emotion","Thoughts","Hope")]
hist.male = ggplot(maleData, aes(Emotion)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "Emotion", y = "Density")
hist.emotion
hist.female = ggplot(femaleData, aes(Emotion)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "Emotion", y = "Density")
hist.male
hist.female
hist.treatment = ggplot(txData, aes(Emotion)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "Treatment", y = "Density")
hist.treatment
View(txData)
View(notxData)
hist.notreatment = ggplot(notxData, aes(Emotion)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "No Treatment", y = "Density")
hist.notreatment
describe(HW1data$Emotion)
describe(cbind(fData$day1, fData$day2, fData$day3))
stat.desc(HW1data$Emotion, basic = FALSE, norm = TRUE)
stat.desc(femaleData$Emotion, basic = FALSE, norm = TRUE)
describe(maleData$Emotion)
stat.desc(maleData$Emotion, basic = FALSE, norm = TRUE)
View(notxData)
View(txData)
describe(txData$Emotion)
stat.desc(txData$Emotion, basic = FALSE, norm = TRUE)
txData$Gender <- factor(HW1data$Gender, levels = c(1:2), labels = c("Female","Male"))
describe(cbind(HW1data$Hope, HW1data$Stigma, HW1data$Emotion, HW1data$Thoughts))
stat.desc(cbind(HW1data$Hope, HW1data$Stigma, HW1data$Emotion, HW1data$Thoughts), basic = FALSE, norm = TRUE)
describe(fData[,c("Hope","Stigma","Emotion","Thoughts")])
describe(HW1data[,c("Hope","Stigma","Emotion","Thoughts")])
stat.desc(HW1data[,c("Hope","Stigma","Emotion","Thoughts")], basic = FALSE, norm = TRUE)
describe(HW1data$Stigma)
stat.desc(HW1data$Stigma, basic = FALSE, norm = TRUE)
describe(HW1data$Emotion)
stat.desc(HW1data$Emotion, basic = FALSE, norm = TRUE)
describe(txData$Emotion)
stat.desc(txData$Emotion, basic = FALSE, norm = TRUE)
describe(notxData$Emotion)
stat.desc(notxData$Emotion, basic = FALSE, norm = TRUE)
txData$Gender <- factor(txData$Gender$Gender, levels = c(0:1), labels = c("Male", "Female"))
txData$Gender <- factor(txData$Gender, levels = c(0:1), labels = c("Male", "Female"))
txData
txData$Gender <- factor(txData$Gender, levels = c(0:1), labels = c("Male", "Female"))
txData
leveneTest(txData$Emotion, txData$Gender, center = median)
View(txData)
leveneTest(HW1data$Emotion, center = median)
leveneTest(HW1data$Emotion, HW1data$PastTX, center = median)
View(HW1data)
leveneTest(HW1data$Stigma, HW1data$Gender, center = median)
?pcor.test
library(polycor)
library(Hmisc)
library(ggm)
library(boot)
library(ggplot2)
?pcor.test
library(ggm)
library(ggplot2)
library(polycor)
library(Hmisc)
library(psych)
library(boot)
library(pastecs)
library(car)
describe(HW1data$Hope)
stat.desc(HW1data$Hope, basic = FALSE, norm = TRUE)
library(ggm)
library(ggplot2)
library(polycor)
library(Hmisc)
library(psych)
library(boot)
library(pastecs)
library(car)
cor(HW1d$Stigma, HW1data$Thoughts, use = "pairwise.complete.obs", method = "pearson")
cor(HW1data$Stigma, HW1data$Thoughts, use = "pairwise.complete.obs", method = "pearson")
cor(HW1data$Stigma, HW1data$Thoughts, use = "pairwise.complete.obs", method = "pearson")^2
cor.test(HW1data$Stigma, HW1data$Thoughts, alternative = "two.sided", use = "pairwise.complete.obs", method = "pearson", conf.level = 0.95)
cor.test(HW1data$Stigma, HW1data$Emotion, alternative = "two.sided", use = "pairwise.complete.obs", method = "pearson", conf.level = 0.95)
hw1 -> HW1data
bootr <- function(HW1data, i) cor(HW1data$Stigma[i], HW1data$Emotion[i], use = "pairwise.complete.obs", method = "pearson")
boot_r <- boot(ExAnx, bootr, 2000)
boot_r
bootr <- function(HW1data, i) cor(HW1data$Stigma[i], HW1data$Emotion[i], use = "pairwise.complete.obs", method = "pearson")
boot_r <- boot(HW1data, bootr, 2000)
boot_r
boot.ci(boot_r)
HW1data2 <- HW1data[,c("Stigma", "Emotion", "Thoughts")]
pcate <- pcor(c("Stigma", "Emotion", "Thoughts"), var(ExAnx2))
pcate
pcor.test(pcate, 1, 103)
HW1data2 <- HW1data[,c("Stigma", "Emotion", "Thoughts")]
pcate <- pcor(c("Stigma", "Emotion", "Thoughts"), var(Thoughts))
HW1data2 <- pcor(c("Stigma", "Emotion", "Thought"), var(Thoughts))
HW1data2 <- HW1data[,c("Stigma", "Emotion", "Thoughts")]
pcate <- pcor(c("Stigma", "Emotion", "Thought"), var(HW1data2))
HW1data2 <- HW1data[,c("Stigma", "Emotion", "Thoughts")]
pcate <- pcor(c("Stigma", "Emotion", "Thought"), var(HW1data2))
pcate
pcate <- pcor(c("Stigma", "Emotion", "Thoughts"), var(HW1data2))
pcate
pcor.test(pcate, 1, 103)
HW1data3 <- HW1data[,c("Stigma", "Emotion", "Thoughts", "Hope")]
pcate2 <- pcor(c("Stigma", "Emotion", "Thoughts", "Hope"), var(HW1data3))
pcate2
pcor.test(pcate2, 1, 120)
HW1data2 <- HW1data[,c("Stigma", "Emotion", "Thoughts")]
pcate <- pcor(c("Stigma", "Emotion", "Thoughts"), var(HW1data2))
pcate
pcor.test(pcate, 1, 103)
HW1data <- read.delim("HW1.dat", header = TRUE)
library(ggm)
library(ggplot2)
library(polycor)
library(Hmisc)
library(psych)
library(boot)
library(pastecs)
library(car)
HW1data$Gender <- factor(HW1data$Gender, levels = c(1:2), labels = c("Female","Male"))
HW1data$PastTX <- factor(HW1data$PastTX, levels = c(1:2), labels = c("No Tx", "Tx"))
maleData <- subset(HW1data, HW1data == "Male")
femaleData <- subset(HW1data, HW1data$Gender == "Female")
txData <- subset(HW1data, HW1data$PastTX == "Tx")
notxData <- subset(HW1data, HW1data$PastTX == "No Tx")
HW1edit <- HW1data[,c("Stigma","Emotion","Thoughts","Hope")]
txData$Gender <- factor(HW1data$Gender, levels = c(1:2), labels = c("Female","Male"))
hist.emotion = ggplot(HW1data, aes(Emotion)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "Emotion", y = "Density")
hist.emotion
hist.male = ggplot(maleData, aes(Emotion)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "Male", y = "Density")
hist.male
hist.female = ggplot(femaleData, aes(Emotion)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "Female", y = "Density")
hist.female
hist.treatment = ggplot(txData, aes(Emotion)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "Treatment", y = "Density")
hist.treatment
hist.notreatment = ggplot(notxData, aes(Emotion)) + geom_histogram(aes(y = ..density..), color = "black", fill = "white") + labs(x = "No Treatment", y = "Density")
hist.notreatment
describe(HW1data$Emotion)
stat.desc(HW1data$Emotion, basic = FALSE, norm = TRUE)
describe(HW1data$Stigma)
stat.desc(HW1data$Stigma, basic = FALSE, norm = TRUE)
describe(femaleData$Emotion)
stat.desc(femaleData$Emotion, basic = FALSE, norm = TRUE)
describe(txData$Emotion)
stat.desc(maleData$Emotion, basic = FALSE, norm = TRUE)
describe(txData$Emotion)
stat.desc(txData$Emotion, basic = FALSE, norm = TRUE)
describe(notxData$Emotion)
stat.desc(notxData$Emotion, basic = FALSE, norm = TRUE)
describe(cbind(HW1data$Hope, HW1data$Stigma, HW1data$Emotion, HW1data$Thoughts))
stat.desc(cbind(HW1data$Hope, HW1data$Stigma, HW1data$Emotion, HW1data$Thoughts), basic = FALSE, norm = TRUE)
describe(HW1data[,c("Hope","Stigma","Emotion","Thoughts")])
stat.desc(HW1data[,c("Hope","Stigma","Emotion","Thoughts")], basic = FALSE, norm = TRUE)
txData$Gender <- factor(txData$Gender, levels = c(0:1), labels = c("Male", "Female"))
txData$Gender <- factor(txData$Gender, levels = c(0:1), labels = c("Male", "Female"))
txData
describe(HW1data$Hope)
stat.desc(HW1data$Hope, basic = FALSE, norm = TRUE)
library(car)
leveneTest(HW1data$Emotion, HW1data$PastTX, center = median)
leveneTest(HW1data$Stigma, HW1data$Gender, center = median)
cor(HW1data$Stigma, HW1data$Thoughts, use = "pairwise.complete.obs", method = "pearson")
cor(HW1data$Stigma, HW1data$Thoughts, use = "pairwise.complete.obs", method = "pearson")^2
cor(ExAnx[,c("Revise","Anxiety","Exam")], use = "pairwise.complete.obs", method = "pearson")
cor.test(HW1data$Stigma, HW1data$Thoughts, alternative = "two.sided", use = "pairwise.complete.obs", method = "pearson", conf.level = 0.95)
cor.test(HW1data$Stigma, HW1data$Emotion, alternative = "two.sided", use = "pairwise.complete.obs", method = "pearson", conf.level = 0.95)
bootr <- function(HW1data, i) cor(HW1data$Stigma[i], HW1data$Emotion[i], use = "pairwise.complete.obs", method = "pearson")
boot_r <- boot(HW1data, bootr, 2000)
boot_r
boot.ci(boot_r)
HW1data2 <- HW1data[,c("Stigma", "Emotion", "Thoughts")]
pcate <- pcor(c("Stigma", "Emotion", "Thoughts"), var(HW1data2))
pcate
pcor.test(pcate, 1, 103)
HW1data3 <- HW1data[,c("Stigma", "Emotion", "Thoughts", "Hope")]
pcate2 <- pcor(c("Stigma", "Emotion", "Thoughts", "Hope"), var(HW1data3))
pcate2
pcor.test(pcate2, 1, 120)
